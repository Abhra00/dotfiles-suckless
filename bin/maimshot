#!/usr/bin/env bash

# Options
option_1="  Capture Desktop"
option_2="  Capture Area"
option_3="  Capture Window"
option_4="  Capture in 5s"
option_5="  Capture in 10s"

# Notification icon
icon="$HOME/.config/dunst/assets/screenshot.png"

# Pass variables to rofi dmenu
run_dmenu() {
    echo -e "$option_1\n$option_2\n$option_3\n$option_4\n$option_5" | dmenu -i -p "Screenshot which area?" | sed 's/^:b //'
}

# Screenshot
time=$(date +%Y-%m-%d-%H-%M-%S)
geometry=$(xrandr | grep 'current' | head -n1 | cut -d',' -f2 | tr -d '[:blank:],current')
dir="$(xdg-user-dir PICTURES)/Screenshots"
file="Screenshot_${time}_${geometry}.png"

if [[ ! -d "$dir" ]]; then
    mkdir -p "$dir"
fi

# notify and view screenshot
notify_view() {
    paplay /usr/share/sounds/freedesktop/stereo/screen-capture.oga > /dev/null 2>&1
    notify_cmd_shot='dunstify -u low --replace=699'
    ${notify_cmd_shot} -i "$icon" "Copied to clipboard."
    nsxiv ${dir}/"$file"
    if [[ -e "$dir/$file" ]]; then
        ${notify_cmd_shot} -i "$icon" "Screenshot Saved."
    else
        ${notify_cmd_shot} -i "$icon" "Screenshot Deleted."
    fi
}

# Copy screenshot to clipboard
copy_shot() {
    tee "$file" | xclip -selection clipboard -t image/png
}

# countdown
countdown() {
    for sec in $(seq $1 -1 1); do
        dunstify -t 1000 --replace=699 "Taking shot in : $sec"
        sleep 1
    done
}

# take shots
shotnow() {
    cd ${dir} && sleep 0.5 && maim -u -f png | copy_shot
    notify_view
}

shot5() {
    countdown '5'
    sleep 1 && cd ${dir} && maim -u -f png | copy_shot
    notify_view
}

shot10() {
    countdown '10'
    sleep 1 && cd ${dir} && maim -u -f png | copy_shot
    notify_view
}

shotwin() {
    cd ${dir} && maim -u -f png -i $(xdotool getactivewindow) | copy_shot
    notify_view
}

shotarea() {
    cd ${dir} && maim -u -f png -s -b 2 -c 0.35,0.55,0.85,0.25 -l | copy_shot
    notify_view
}

# Execute Command
run_cmd() {
    if [[ "$1" == '--opt1' ]]; then
        shotnow
    elif [[ "$1" == '--opt2' ]]; then
        shotarea
    elif [[ "$1" == '--opt3' ]]; then
        shotwin
    elif [[ "$1" == '--opt4' ]]; then
        shot5
    elif [[ "$1" == '--opt5' ]]; then
        shot10
    fi
}

# Actions
chosen="$(run_dmenu)"
case ${chosen} in
$option_1)
    run_cmd --opt1
    ;;
$option_2)
    run_cmd --opt2
    ;;
$option_3)
    run_cmd --opt3
    ;;
$option_4)
    run_cmd --opt4
    ;;
$option_5)
    run_cmd --opt5
    ;;
esac
